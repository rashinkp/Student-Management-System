<style>
  body {
    font-family: Arial, sans-serif;
    background-color: #1B262C;
    color: #BBE1FA;
    margin: 0;
    padding: 0;
  }

  .container {
    max-width: 800px;
    margin: 20px auto;
    padding: 20px;
    background-color: #0F4C75;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    /* to contain animations */
  }

  .section {
    margin-bottom: 40px;
    padding: 20px;
    border-radius: 10px;
    background-color: #3282B8;
    animation: slideIn 1s ease forwards;
  }

  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  h2 {
    color: #BBE1FA;
  }

  .profile-photo {
    width: 150px;
    height: 150px;
    border-radius: 50%;
    margin-bottom: 20px;
  }

  table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 20px;
  }

  th,
  td {
    padding: 10px;
    border-bottom: 1px solid #BBE1FA;
  }

  th {
    background-color: #0F4C75;
    color: #BBE1FA;
  }

  td {
    background-color: #1B262C;
  }

  input[type="text"] {
    width: calc(100% - 110px);
    padding: 10px;
    border: 1px solid #3282B8;
    border-radius: 5px 0 0 5px;
    background-color: #1B262C;
    color: #BBE1FA;
  }

  .btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: #BBE1FA;
    border: none;
    color: #0F4C75;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
    text-decoration: none; /* Change button to anchor tag */
  }

  .btn:hover {
    background-color: #0F4C75;
  }

  .controls {
    display: flex;
    justify-content: space-between;
  }

  span {
    color: #fff;
  }
  .box {
  background-color: #0F4C75;
  color: #BBE1FA;
  border-radius: 10px;
  padding: 20px;
  margin: 0 20px;
  width: 150px;
  height: 150px; /* Set fixed height */
  display: inline-block;
  transition: transform 0.3s ease;
  box-sizing: border-box; /* Include padding and border in the width and height */
  cursor: pointer;
}

.box:hover {
  transform: translateY(-10px);
}
.number {
  font-size: 3.2rem;
  font-weight: bold;
  margin-top: 10px;
  color: #fff;
}
.attendance-head{
    font-size: 1rem;
}
.section-head{
  font-size: 1.5rem;
  font-weight: bolder;
  color: white;
}
</style>

<section>
  <div class="container">
    <div class="section">
      <h2 class="section-head mb-5">Profile</h2>
      <div>
        <img class="profile-photo" src="/images/student/{{student._id}}.jpg" alt="Profile Photo">
        <p><strong>Name:</strong><span>{{student.firstName}} {{student.secondName}}</span></p>
        <p><strong>Admission No:</strong> <span>{{student.admissionNo}}</span></p>
        <p><strong>Age:</strong> <span>{{student.age}}</span></p>
        <p><strong>Sex:</strong> <span>{{student.sex}}</span></p>
        <p><strong>Class:</strong> <span>{{student.class}}</span></p>
        <p><strong>Roll Number:</strong> <span>{{student.rollNumber}}</span></p>
        <p><strong>State:</strong> <span>{{student.state}}</span></p>
        <p><strong>Place:</strong> <span>{{student.place}}</span></p>
        <p><strong>Mobile:</strong> <span>{{student.mobile}}</span></p>
        <p><strong>Email:</strong> <span>{{student.email}}</span></p>
      </div>
    </div>
    <div class="section">
      <h2 class="section-head mb-5">Attendance</h2>
      <div class="box total-working-days mb-3">
        <h3 class="attendance-head">Total Working Days</h3>
        <p class="number">{{workingDays}}</p>
      </div>
      <div class="box present-days">
        <h3 class="attendance-head">Student Present Days</h3>
        <p class="number">{{student.attendance.present}}</p>
      </div>
      <div class="box percentage">
        <h3 class="attendance-head">Total Percentage</h3>
        <p class="number">{{student.attendance.percentage}}%</p>
      </div>
    </div>
    <div class="section">
      <h2 class="section-head mb-5">Marks</h2>
      {{#if student.mark}}
            <table>
              <thead>
                <tr>
                  <th>Subject</th>
                  <th>Student Mark</th>
                </tr>
              </thead>
              <tbody>
                {{#each student.mark}}
                <tr>
                  <td>{{@key}}</td>
                  <td>
                     <form class="updateMarkForm" data-student-id="{{../studentId}}" data-subject="{{@key}}">
                      <input type="number" name="mark" value="{{this}}" required />
                      <button type="submit" class="btn btn-primary">Update</button>
                    </form>
                  </td>
                </tr>
                {{/each}}




              </tbody>
            </table>

            {{else}}
            <a href="/teacher/add-mark/{{student._id}}" class="btn">Add mark</a>
            {{/if}}
    </div>
    <div class="section">
      <h2 class="section-head mb-5">Contact</h2>
      <div>
        <input class="mb-3" type="text" placeholder="Type your message...">
        <a class="btn me-1" href="#">Send Message</a>
        <a class="btn" href="#">Call</a>
      </div>
    </div>
   {{#if principal}}
     <div class="section">
      <h2 class="section-head mb-5">Controls</h2>
      <div class="controls">
        <a href="/principal/edit-student/{{student._id}}" class="btn" id="editButton">Edit</a>
        <a class="btn" id="removeButton" onclick="confirmRemove()">Remove</a>
      </div>
    </div>
    {{/if}}
  </div>

</section>

<script>
  function confirmRemove() { var result = confirm("Are you sure you want toremove this student?"); if (result) { window.location.href = "/principal/remove-student/{{student._id}}"; } }
  document.addEventListener("DOMContentLoaded", () => {
    const updateMarkForms = document.querySelectorAll(".updateMarkForm");
    updateMarkForms.forEach(form => {
      form.addEventListener("submit", async (event) => {
        event.preventDefault();
        const formData = new FormData(form);
        const mark = formData.get("mark");
        const studentId = form.getAttribute("data-student-id");
        const subject = form.getAttribute("data-subject");
        try {
          const response = await fetch("/teacher/update-student-mark", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ studentId, subject, mark }),
          });
          if (response.ok) {
            // Update the UI to reflect the new mark value
            // You may need to reload the page or update specific elements
          } else {
            console.error("Failed to update mark");
          }
        } catch (error) {
          console.error("Error updating mark:", error);
        }
      });
    });
  });
</script>
